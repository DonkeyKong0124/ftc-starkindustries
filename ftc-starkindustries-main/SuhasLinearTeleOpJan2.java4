package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.util.ElapsedTime;
import org.firstinspires.ftc.robotcore.external.navigation.CurrentUnit;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;

import org.firstinspires.ftc.robotcore.external.navigation.AngleUnit;
import org.firstinspires.ftc.robotcore.external.navigation.CurrentUnit;

@TeleOp(name = "Tele", group = "Linear OpMode")
public class SuhasLinearTeleOpJan24 extends LinearOpMode {

    private ElapsedTime runtime = new ElapsedTime();
    private DcMotor rightFrontWheel = null;
    private DcMotor rightRearWheel = null;
    private DcMotor leftFrontWheel = null;
    private DcMotor leftRearWheel = null;

    private DcMotor leftLinearSlide = null;
    private DcMotor rightLinearSlide = null;
    private DcMotor horizontalSlide = null;

    private Servo verticalClaw = null;
    private Servo horizontalClaw = null;

    private static final int VERTICAL_HOOK_POSITION = 1;
    private static final int VERTICAL_PERIMETER_POSITION = 0;
    private int currentSlideTarget = 0;

    @Override
    public void runOpMode() {

        // Initialize hardware variables.
        rightFrontWheel = hardwareMap.get(DcMotor.class, "frontRight");
        rightRearWheel = hardwareMap.get(DcMotor.class, "backRight");
        leftFrontWheel = hardwareMap.get(DcMotor.class, "frontLeft");
        leftRearWheel = hardwareMap.get(DcMotor.class, "backLeft");

        leftLinearSlide = hardwareMap.get(DcMotor.class, "linearSlideLeft");
        rightLinearSlide = hardwareMap.get(DcMotor.class, "linearSlideRight");
        horizontalSlide = hardwareMap.get(DcMotor.class, "horizontalSlide");

        verticalClaw = hardwareMap.get(Servo.class, "verticalClaw");
        horizontalClaw = hardwareMap.get(Servo.class, "horizontalClaw");

        // verticalClaw.scaleRange(0.1, 0.8);
        // horizontalClaw.scaleRange(0.1, 0.8);

        // Set motor directions
        rightFrontWheel.setDirection(DcMotor.Direction.FORWARD);
        rightRearWheel.setDirection(DcMotor.Direction.FORWARD);
        leftFrontWheel.setDirection(DcMotor.Direction.FORWARD);
        leftRearWheel.setDirection(DcMotor.Direction.REVERSE);

        leftLinearSlide.setDirection(DcMotor.Direction.REVERSE);
        rightLinearSlide.setDirection(DcMotor.Direction.FORWARD);

        // Set Zero Power Behavior to BRAKE
        leftLinearSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightLinearSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        horizontalSlide.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // Initialize telemetry
        telemetry.addData("Status", "Initialized");
        telemetry.update();

        waitForStart();
        runtime.reset();

        // Main loop
        while (opModeIsActive()) {

            // ------------ WHEELS -------------- //
            double axialPower = gamepad1.left_stick_y;
            double lateralPower = gamepad1.left_stick_x / 2;
            double yawPower = gamepad1.right_stick_x;

            rightFrontWheel.setPower(-(axialPower - lateralPower - yawPower));
            rightRearWheel.setPower(-axialPower + lateralPower - yawPower);
            leftFrontWheel.setPower((axialPower + lateralPower + yawPower));
            leftRearWheel.setPower(-axialPower - lateralPower + yawPower);

            // ------------ LINEAR SLIDES -------------- //
            // double verticalPower = gamepad1.right_trigger;
            // // Set target position for slides when dpad is pressed
            // if (gamepad1.dpad_up) {
            //     // currentSlideTarget = VERTICAL_HOOK_POSITION;
            //     leftLinearSlide.setTargetPosition(-500);
            //     rightLinearSlide.setTargetPosition(-500);
            //     // leftLinearSlide.setPower(verticalPower);
            //     // rightLinearSlide.setPower(verticalPower);
            //  } else if (gamepad1.dpad_down) {
            // //     currentSlideTarget = VERTICAL_PERIMETER_POSITION;
            //      leftLinearSlide.setTargetPosition(500);
            //      rightLinearSlide.setTargetPosition(500);
            // }
            
            double verticalUpPower = gamepad1.right_stick_y;
            leftLinearSlide.setPower(verticalUpPower);
            rightLinearSlide.setPower(verticalUpPower);

            
            // Continuously move linear slides toward target position
            

            // leftLinearSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);
            // rightLinearSlide.setMode(DcMotor.RunMode.RUN_TO_POSITION);

            // leftLinearSlide.setPower(1.0);
            // rightLinearSlide.setPower(1.0);

            // ------------ CLAW -------------- //
            
            verticalClaw.scaleRange(0.1, 0.8);
            horizontalClaw.scaleRange(0.1, 0.8);
            
            if (gamepad1.b) {
                verticalClaw.setPosition(0.1); // Adjusted position for open claw
            }
            if (gamepad1.x) {
                verticalClaw.setPosition(1.0); // Adjusted position for close claw
            }

            if (gamepad1.y) {
                horizontalClaw.setPosition(0.1); // Adjusted position for open claw
            }
            if (gamepad1.a) {
                horizontalClaw.setPosition(1.0); // Adjusted position for close claw
            }

            // ------------ HORIZONTAL SLIDE -------------- //
                            double horizontalForwardPower = gamepad1.left_trigger;

                        if (gamepad1.left_trigger > 0) {

            horizontalSlide.setDirection(DcMotor.Direction.FORWARD);
            horizontalSlide.setPower(horizontalForwardPower);
                        }
                                    double horizontalBackPower = gamepad1.right_trigger;

                        if (gamepad1.right_trigger > 0) {

                        horizontalSlide.setDirection(DcMotor.Direction.REVERSE);

            horizontalSlide.setPower(horizontalBackPower);}

            // ---------------- TELEMETRY ------------------- //
            telemetry.addData("Status", "Run Time: " + runtime.toString());
            telemetry.addData("Left Linear Slide Position", leftLinearSlide.getCurrentPosition());
            telemetry.addData("Right Linear Slide Position", rightLinearSlide.getCurrentPosition());
            telemetry.addData("Horizontal Forward Slide Power", horizontalForwardPower);
            telemetry.addData("Horizontal Back Slide Power", horizontalBackPower);
            telemetry.addData("Vertical Claw Position", verticalClaw.getPosition());
            telemetry.addData("Horizontal Claw Position", horizontalClaw.getPosition());
            telemetry.addData("Vertical Slides Position", ((DcMotorEx) leftLinearSlide).getCurrent(CurrentUnit.AMPS));
            telemetry.update();
        }
    }
}
